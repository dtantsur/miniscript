[tox]
minversion = 3.1.0
skipsdist = True
envlist = py3,mypy,pep8,docs
ignore_basepython_conflict=true

[testenv]
usedevelop = True
basepython = python3
setenv = VIRTUAL_ENV={envdir}
         PYTHONDONTWRITEBYTECODE = 1
         LANGUAGE=en_US
         LC_ALL=en_US.UTF-8
         PYTHONWARNINGS=default::DeprecationWarning
deps =
  .[extras]
  coverage!=4.4,>=4.0 # Apache-2.0
  PyYAML>=3.13 # MIT
commands =
  coverage erase
  coverage run --source miniscript --omit='*tests*' --branch -m unittest discover
  coverage report --omit='*tests*' --show-missing --skip-empty
  coverage html -d ./cover --omit='*tests*'
passenv = http_proxy,HTTP_PROXY,https_proxy,HTTPS_PROXY,no_proxy,NO_PROXY

[testenv:pep8]
usedevelop = False
deps =
  hacking>=3.0.0,<4.1.0 # Apache-2.0
  doc8>=0.6.0 # Apache-2.0
  flake8-import-order>=0.17.1 # LGPLv3
commands =
  flake8 miniscript
  doc8 README.rst doc/source

[testenv:mypy]
deps =
  .[extras]
  mypy>=0.770 # MIT
commands =
  mypy miniscript

[testenv:docs]
deps =
  sphinx>=2.0.0,!=2.1.0 # BSD
commands =
  sphinx-build -b html -W doc/source doc/build/html

[testenv:venv]
deps =
  -r{toxinidir}/requirements.txt
commands = {posargs}

[flake8]
# [W503] Line break before binary operator.
ignore = W503
filename = *.py,app.wsgi
exclude =  .venv,.git,.tox,dist,doc,*lib/python*,*egg,build
import-order-style = pep8
application-import-names = miniscript
# [H106] Don't put vim configuration in source files.
# [H203] Use assertIs(Not)None to check for None.
# [H204] Use assert(Not)Equal to check for equality.
# [H205] Use assert(Greater|Less)(Equal) for comparison.
# [H210] Require ‘autospec’, ‘spec’, or ‘spec_set’ in mock.patch/mock.patch.object calls
# [H904] Delay string interpolations at logging calls.
enable-extensions=H106,H203,H204,H205,H210,H904
